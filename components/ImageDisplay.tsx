
import React from 'react';
import Loader from './Loader';
import ErrorDisplay from './ErrorDisplay';

interface ImageDisplayProps {
  imageUrl: string | null;
  isLoading: boolean;
  error: string | null;
  prompt: string;
}

const Placeholder: React.FC = () => (
    <div className="flex flex-col items-center justify-center h-full text-center text-gray-500">
        <svg xmlns="http://www.w3.org/2000/svg" className="w-24 h-24 mb-4 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={1}>
            <path strokeLinecap="round" strokeLinejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        <h3 className="text-xl font-semibold">Your generated image will appear here</h3>
        <p className="mt-2 max-w-sm">Enter a description above and click "Generate" to see the magic happen.</p>
    </div>
);


const ImageDisplay: React.FC<ImageDisplayProps> = ({ imageUrl, isLoading, error, prompt }) => {
  return (
    <div className="w-full aspect-square bg-white border-2 border-dashed border-gray-300 rounded-xl shadow-inner flex items-center justify-center p-4 relative overflow-hidden">
      {isLoading && <Loader />}
      {error && !isLoading && <ErrorDisplay message={error} />}
      {imageUrl && !isLoading && !error && (
        <div className="w-full h-full relative group">
          <img 
            src={imageUrl} 
            alt={prompt || 'Generated by AI'} 
            className="w-full h-full object-contain rounded-lg transition-transform duration-300"
          />
           <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-0 group-hover:bg-opacity-60 transition-all duration-300 p-4 rounded-b-lg">
             <p className="text-white text-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300 truncate">
               {prompt}
             </p>
           </div>
        </div>
      )}
      {!isLoading && !error && !imageUrl && <Placeholder />}
    </div>
  );
};

export default ImageDisplay;
